# Пример рабочего процесса для сборки и развертывания сайта Jekyll на GitHub Pages
name: Deploy Jekyll with GitHub Pages dependencies preinstalled

on:
  # Запускается при пушах в целевую ветку по умолчанию
  push:
    branches: ["master"]

  # Позволяет запускать этот рабочий процесс вручную из вкладки Actions
  workflow_dispatch:

# Устанавливает разрешения для GITHUB_TOKEN для развертывания на GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Разрешает только одно параллельное развертывание, пропуская запланированные запуски между текущим и последним запланированным.
# Однако не отменяет запущенные процессы, так как мы хотим позволить этим производственным развертываниям завершиться.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Задача сборки
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Install Javascript Modules
        run: npm install
      - name: Build project
        run: npm run build
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: ./dist  # Убедитесь, что путь соответствует сборке

  # Задача развертывания
  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps: 
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}  # Используйте встроенный токен
          artifact_name: github-pages  # Убедитесь, что имя артефакта совпадает с загруженным
